package abi

import (
	"bytes"
	"io/ioutil"
	"testing"

	"github.com/bytejedi/tron-sdk-go/utils"
	ethabi "github.com/ethereum/go-ethereum/accounts/abi"
)

func TestPack(t *testing.T) {
	abiJson, err := ioutil.ReadFile("./abi.json")
	if err != nil {
		t.Error(err)
	}

	abi, err := ethabi.JSON(bytes.NewReader(abiJson))
	if err != nil {
		t.Error(err)
	}
	method := abi.Methods["prepareMint"]

	bz, err := Pack(&method, "[{\"uint256\":\"1212\"},{\"uint256[4]\":[\"2\",\"3\",\"4\",\"5\"]},{\"uint256[2]\":[\"39\",\"10\"]},{\"address\":\"TCQRkmYMbb8bzrZfrtcokox8hwVmY3DCVP\"},{\"address[4]\":[\"TCudRMFJDPChH2FNjVb82cvbREMPNUm1pj\",\"TCudRMFJDPChH2FNjVb82cvbREMPNUm1pj\",\"TCudRMFJDPChH2FNjVb82cvbREMPNUm1pj\",\"TCudRMFJDPChH2FNjVb82cvbREMPNUm1pj\"]},{\"uint256\":\"4\"}]")
	if err != nil {
		t.Error(err)
	}

	exp := "75a725cd00000000000000000000000000000000000000000000000000000000000004bc00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001600000000000000000000000001ab54bfac5a64d4e34468ae87b1bf46b5994911100000000000000000000000000000000000000000000000000000000000001ca0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000203b18e8969dfff5eb534b2b870292dde6772f34000000000000000000000000203b18e8969dfff5eb534b2b870292dde6772f34000000000000000000000000203b18e8969dfff5eb534b2b870292dde6772f34000000000000000000000000203b18e8969dfff5eb534b2b870292dde6772f34"
	s := utils.Bytes2Hex(bz)
	if s != exp {
		t.Error("getPaddedParam failed")
	}
}
